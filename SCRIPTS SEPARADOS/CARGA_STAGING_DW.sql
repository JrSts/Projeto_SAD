USE PROJETO_SAD

----------------------------------------------------------------------------------------------------------------------
-- CARGA STAGING PARA DW

--------------------------							--------------------------
--------------------------			CLIENTE			--------------------------
--------------------------							--------------------------

ALTER PROCEDURE SP_CLIENTE_STG_DW @DATA_CARGA DATETIME AS
DECLARE @DATA DATETIME, @COD_CLIENTE INT, @NOME VARCHAR(100), @APELIDO VARCHAR(100), @DATA_NASCIMENTO DATETIME, @ENDERECO VARCHAR(200), 
		@TELEFONE VARCHAR(11), @CPF VARCHAR(11), @SENHA VARCHAR(10)
DECLARE C_CURSOR CURSOR FOR SELECT DATA_CARGA, COD_CLIENTE, NOME, APELIDO, DATA_NASCIMENTO, ENDERECO, TELEFONE, CPF, SENHA FROM STG.AUX_CLIENTE
OPEN C_CURSOR
FETCH C_CURSOR INTO @DATA, @COD_CLIENTE, @NOME, @APELIDO, @DATA_NASCIMENTO, @TELEFONE, @ENDERECO, @CPF, @SENHA
WHILE @@FETCH_STATUS = 0
	BEGIN
		IF @COD_CLIENTE IS NULL OR @NOME IS NULL OR @APELIDO IS NULL OR  @DATA_NASCIMENTO IS NULL OR @TELEFONE IS NULL OR  
			   @ENDERECO IS NULL OR @CPF IS NULL OR  @SENHA IS NULL
			BEGIN
				INSERT INTO STG.VIO_CLIENTE VALUES(@DATA_CARGA, @COD_CLIENTE, @NOME, @APELIDO, @DATA_NASCIMENTO, @TELEFONE, @ENDERECO,
												   @CPF, @SENHA, GETDATE(), 'CAMPOS SEM PREENCHER')
			END 
		ELSE
			BEGIN
				IF(EXISTS(SELECT COD_CLIENTE FROM DW.DIM_CLIENTE WHERE COD_CLIENTE = @COD_CLIENTE))
					UPDATE DW.DIM_CLIENTE 
					SET COD_CLIENTE = @COD_CLIENTE, NOME = @NOME, APELIDO = @APELIDO, ENDERECO = @ENDERECO, TELEFONE = @TELEFONE, 
					CPF = @CPF, SENHA = @SENHA
					WHERE COD_CLIENTE = @COD_CLIENTE
				ELSE
					INSERT INTO DW.DIM_CLIENTE VALUES (@COD_CLIENTE, @NOME, @APELIDO,@DATA_NASCIMENTO, @ENDERECO, @TELEFONE, @CPF, @SENHA)
					IF @@ERROR = 0 AND EXISTS(SELECT COD_CLIENTE FROM STG.VIO_CLIENTE WHERE COD_CLIENTE = @COD_CLIENTE)
						DELETE FROM STG.VIO_CLIENTE WHERE COD_CLIENTE = @COD_CLIENTE
			END
		FETCH C_CURSOR INTO @DATA, @COD_CLIENTE, @NOME, @APELIDO, @DATA_NASCIMENTO, @TELEFONE, @ENDERECO, @CPF, @SENHA
	END
CLOSE C_CURSOR
DEALLOCATE C_CURSOR

--------------------------								--------------------------
--------------------------			FUNCIONARIO			--------------------------
--------------------------								--------------------------

ALTER PROCEDURE SP_FUNCIONARIO_STG_DW @DATA_CARGA DATETIME AS
DECLARE @DATA DATETIME, @COD_FUNCIONARIO INT, @NOME VARCHAR(100), @ENDERECO VARCHAR(200), @DATA_NASCIMENTO DATETIME,
		@TELEFONE VARCHAR(11), @CPF VARCHAR(11), @SENHA VARCHAR(10), @SALARIO NUMERIC(10,2), @SALARIO_DIM NUMERIC(10,2)
DECLARE C_CURSOR CURSOR FOR SELECT DATA_CARGA, COD_FUNCIONARIO, NOME, DATA_NASCIMENTO, ENDERECO, 
								   TELEFONE, SALARIO, CPF, SENHA FROM STG.AUX_FUNCIONARIO
OPEN C_CURSOR
FETCH C_CURSOR INTO @DATA, @COD_FUNCIONARIO, @NOME, @DATA_NASCIMENTO, @ENDERECO, @TELEFONE, @SALARIO, @CPF, @SENHA
WHILE @@FETCH_STATUS = 0
	BEGIN	
		IF @COD_FUNCIONARIO IS NULL OR @NOME IS NULL OR  @DATA_NASCIMENTO IS NULL OR @TELEFONE IS NULL OR  
		   @ENDERECO IS NULL OR @SALARIO IS NULL OR @CPF IS NULL OR  @SENHA IS NULL
			BEGIN
				INSERT INTO STG.VIO_FUNCIONARIO VALUES(@DATA_CARGA, @COD_FUNCIONARIO, @NOME, @DATA_NASCIMENTO, @TELEFONE, @ENDERECO,
												       @SALARIO, @CPF, @SENHA, GETDATE(), 'CAMPOS SEM PREENCHER')
			END
		ELSE
			BEGIN
				IF(EXISTS(SELECT COD_FUNCIONARIO FROM DW.DIM_FUNCIONARIO WHERE COD_FUNCIONARIO = @COD_FUNCIONARIO))
					BEGIN
						UPDATE DW.DIM_FUNCIONARIO 
						SET COD_FUNCIONARIO = @COD_FUNCIONARIO, NOME = @NOME, ENDERECO = @ENDERECO, TELEFONE = @TELEFONE, 
						CPF = @CPF, SENHA = @SENHA, DATA_NASCIMENTO = @DATA_NASCIMENTO
						WHERE COD_FUNCIONARIO = @COD_FUNCIONARIO

						SET @SALARIO_DIM = (SELECT SALARIO FROM DW.DIM_FUNCIONARIO WHERE COD_FUNCIONARIO = @COD_FUNCIONARIO AND FLAG_CORRENTE = 'SIM')
						IF @SALARIO <> @SALARIO_DIM
							BEGIN
								UPDATE DW.DIM_FUNCIONARIO SET DATA_FIM = @DATA_CARGA, FLAG_CORRENTE = 'NÃO' 
								WHERE COD_FUNCIONARIO =  @COD_FUNCIONARIO AND FLAG_CORRENTE = 'SIM'
								INSERT INTO DW.DIM_FUNCIONARIO VALUES (@COD_FUNCIONARIO, @NOME, @DATA_NASCIMENTO, @TELEFONE, @ENDERECO, @CPF,  
																	   @SENHA, @SALARIO, @DATA_CARGA, NULL, 'SIM')
							END
					END
				ELSE
					INSERT INTO DW.DIM_FUNCIONARIO VALUES (@COD_FUNCIONARIO, @NOME, @DATA_NASCIMENTO, @TELEFONE, @ENDERECO, @CPF,  
													   @SENHA, @SALARIO, @DATA_CARGA, NULL, 'SIM')
					IF @@ERROR = 0 AND EXISTS(SELECT COD_FUNCIONARIO FROM STG.VIO_FUNCIONARIO WHERE COD_FUNCIONARIO = @COD_FUNCIONARIO)
						DELETE FROM STG.VIO_FUNCIONARIO WHERE COD_FUNCIONARIO = @COD_FUNCIONARIO
			END
		FETCH C_CURSOR INTO @DATA, @COD_FUNCIONARIO, @NOME, @DATA_NASCIMENTO, @ENDERECO, @TELEFONE, @SALARIO, @CPF, @SENHA
	END
CLOSE C_CURSOR
DEALLOCATE C_CURSOR

--------------------------								--------------------------
--------------------------			CATEGORIA			--------------------------
--------------------------								--------------------------

ALTER PROCEDURE SP_CATEGORIA_STG_DW @DATA_CARGA DATETIME AS
DECLARE @DATA DATETIME, @COD_CATEGORIA INT, @CATEGORIA VARCHAR(50)
DECLARE C_CURSOR CURSOR FOR SELECT DATA_CARGA, COD_CATEGORIA, CATEGORIA FROM STG.AUX_CATEGORIA
OPEN C_CURSOR
FETCH C_CURSOR INTO @DATA, @COD_CATEGORIA, @CATEGORIA
WHILE @@FETCH_STATUS = 0
	BEGIN
		IF @COD_CATEGORIA IS NULL OR @CATEGORIA IS NULL 
			BEGIN
				INSERT INTO STG.VIO_CATEGORIA VALUES(@DATA_CARGA, @COD_CATEGORIA, @CATEGORIA, GETDATE(), 'CAMPOS SEM PREENCHER')
			END
		ELSE
			BEGIN
				IF(EXISTS(SELECT COD_CATEGORIA FROM DW.DIM_CATEGORIA WHERE COD_CATEGORIA = @COD_CATEGORIA))
					UPDATE DW.DIM_CATEGORIA 
					SET CATEGORIA = @CATEGORIA
					WHERE COD_CATEGORIA = @COD_CATEGORIA
				ELSE
					INSERT INTO DW.DIM_CATEGORIA VALUES (@COD_CATEGORIA, @CATEGORIA)
					IF @@ERROR = 0 AND EXISTS(SELECT COD_CATEGORIA FROM STG.VIO_CATEGORIA WHERE COD_CATEGORIA = @COD_CATEGORIA)
						DELETE FROM STG.VIO_CATEGORIA WHERE COD_CATEGORIA = @COD_CATEGORIA
			END
		FETCH C_CURSOR INTO @DATA, @COD_CATEGORIA, @CATEGORIA
	END
CLOSE C_CURSOR
DEALLOCATE C_CURSOR

EXEC SP_CATEGORIA_OLTP_STG '20180824'
EXEC SP_CATEGORIA_STG_DW '20180824'
SELECT * FROM DW.DIM_CATEGORIA

--------------------------							--------------------------
--------------------------			TEMPO			--------------------------
--------------------------							--------------------------

ALTER PROCEDURE SP_DIM_TEMPO (@DATA_INICIAL DATETIME, @DATA_FINAL DATETIME) AS
SET LANGUAGE BRAZILIAN
DECLARE	
	@NIVEL VARCHAR(8),				@AUX DATETIME ,				@SEMESTRE SMALLINT, 
	@NOMESEMESTRE VARCHAR(20),		@TRIMESTRE SMALLINT,		@NOMEMES VARCHAR(20), 
	@NOMETRIMESTRE VARCHAR(20),		@DIASEMANA VARCHAR(25),		@FIMSEMANA CHAR(3),
	@DIAUTIL CHAR(3),				@QUINZENA SMALLINT,			@FIMMES CHAR(3),
	@FERIADO CHAR(3),				@ID_TEMPO INT,				@DIA SMALLINT,
	@MES SMALLINT ,					@ANO INT

	IF(@DATA_INICIAL >= @DATA_FINAL)
		BEGIN
			SELECT @AUX = @DATA_FINAL, @DATA_FINAL = @DATA_INICIAL, @DATA_INICIAL = @AUX
		END
	ELSE
	BEGIN 
		WHILE(@DATA_INICIAL <= @DATA_FINAL)
		BEGIN
		IF(EXISTS(SELECT DATA FROM DW.DIM_TEMPO WHERE DATA = @DATA_INICIAL))
			BEGIN
				PRINT 'JÁ EXISTE ESTA DATA: ' + CONVERT(VARCHAR, @DATA_INICIAL)
			END -- FIM DO IF
		ELSE
			BEGIN
				SET @ANO = DATEPART(YYYY,@DATA_INICIAL)
				SET @DIA = DATEPART(DD, @DATA_INICIAL)
				SET @MES = DATEPART(MM, @DATA_INICIAL)
				IF(NOT EXISTS (SELECT ANO FROM DW.DIM_TEMPO WHERE ANO = @ANO))
					BEGIN
						SET @NIVEL = 'ANO'
						INSERT INTO DW.DIM_TEMPO VALUES (@NIVEL, @DATA_INICIAL,NULL,NULL,NULL,NULL,NULL,NULL,
												NULL, NULL, NULL,NULL,NULL,NULL,NULL, @ANO)
					END -- FIM DO IF
				IF(NOT EXISTS (SELECT MES FROM DW.DIM_TEMPO WHERE MES = MONTH(@DATA_INICIAL) AND ANO = YEAR(@DATA_INICIAL)))
					BEGIN
						SELECT @NIVEL = 'MES', @MES = DATEPART(MM, @DATA_INICIAL), @NOMEMES = DATENAME(MM,@DATA_INICIAL)
						IF(@MES < 7)
							BEGIN
								SET @SEMESTRE = 1
								SET @NOMESEMESTRE = '1º SEMESTRE/' + CONVERT(VARCHAR, YEAR(@DATA_INICIAL))
							END --END DO IF

						ELSE 
							BEGIN
								SET @SEMESTRE = 2
								SET @NOMESEMESTRE = '2º SEMESTRE/' + CONVERT(VARCHAR, YEAR(@DATA_INICIAL))
							END --END DO ELSE

						IF(@MES < 4)
							BEGIN 
								SET @TRIMESTRE = 1
								SET @NOMETRIMESTRE = '1º TRIMESTRE/' + CONVERT(VARCHAR, YEAR(@DATA_INICIAL))
							END -- FIM DO IF

						ELSE
						IF(@MES < 7)
							BEGIN 
								SET @TRIMESTRE = 2
								SET @NOMETRIMESTRE = '2º TRIMESTRE/' + CONVERT(VARCHAR, YEAR(@DATA_INICIAL))
							END -- FIM DO IF

						ELSE
						IF(@MES< 10)
							BEGIN 
								SET @TRIMESTRE = 3
								SET @NOMETRIMESTRE = '3º TRIMESTRE/' + CONVERT(VARCHAR, YEAR(@DATA_INICIAL))
							END -- FIM DO IF

						ELSE
						IF(@MES < 13)
							BEGIN 
								SET @TRIMESTRE = 4
								SET @NOMETRIMESTRE = '4º TRIMESTRE/' + CONVERT(VARCHAR, YEAR(@DATA_INICIAL))
							END -- FIM DO IF

						INSERT INTO DW.DIM_TEMPO VALUES (@NIVEL, @DATA_INICIAL,NULL,NULL,NULL,NULL,NULL,NULL,@MES,
														  @NOMEMES,NULL,@TRIMESTRE,@NOMETRIMESTRE,@SEMESTRE,@NOMESEMESTRE,@ANO)
					END -- FIM DO IF

					SET @NIVEL = 'DIA'
					SET @DIASEMANA = DATENAME (DW, @DATA_INICIAL)
					SET @FERIADO = NULL;

				IF (@DIASEMANA = 'SABADO' OR @DIASEMANA = 'DOMINGO')
					SELECT @FIMSEMANA = 'SIM', @DIAUTIL = 'NAO'
				ELSE
					SELECT @FIMSEMANA = 'NAO', @DIAUTIL = 'SIM'

				IF(DATEPART(DD, @DATA_INICIAL + 1) = 1)
					SET @FIMMES = 'SIM'
				ELSE
					SET @FIMMES = 'NAO'

				IF(DATEPART(DD, @DATA_INICIAL) <= 15)
					SET @QUINZENA = 1
				ELSE
					SET @QUINZENA = 2

				INSERT INTO DW.DIM_TEMPO VALUES (@NIVEL, @DATA_INICIAL, @DIA, @DIASEMANA, @DIAUTIL, NULL, @FIMSEMANA, @QUINZENA,
				@MES, @NOMEMES, @FIMMES, @TRIMESTRE, @NOMETRIMESTRE, @SEMESTRE, @NOMESEMESTRE, @ANO)
			END
			SET @DATA_INICIAL = DATEADD (DD, 1, @DATA_INICIAL)
		END --FIM DO WHILE
	END -- FIM DO ELSE

TRUNCATE TABLE DW.DIM_TEMPO
EXEC SP_DIM_TEMPO '20180101', '20200101'
SELECT * FROM DW.DIM_TEMPO


--------------------------							--------------------------
--------------------------			DIVIDA			--------------------------
--------------------------							--------------------------


ALTER PROCEDURE SP_DIVIDA_STG_DW @DATA_CARGA DATETIME AS
DECLARE @DATA DATETIME, @COD_DIVIDA INT, @COD_CLIENTE INT, @COD_FUNCIONARIO INT, @COD_CATEGORIA INT, @DATA_DIVIDA VARCHAR(50), @VALOR NUMERIC(10,2),
@ID_CLIENTE INT, @ID_FUNCIONARIO INT, @ID_CATEGORIA INT, @ID_DATA_DIVIDA DATETIME, 	@ID_DATA_POSSIVEL_PAGAMENTO DATETIME
DECLARE C_CURSOR CURSOR FOR SELECT DATA_CARGA, COD_DIVIDA, COD_CLIENTE, COD_FUNCIONARIO, COD_CATEGORIA, DATA, VALOR FROM STG.AUX_DIVIDA
OPEN C_CURSOR
FETCH C_CURSOR INTO @DATA, @COD_DIVIDA, @COD_CLIENTE, @COD_FUNCIONARIO, @COD_CATEGORIA, @DATA_DIVIDA, @VALOR
WHILE @@FETCH_STATUS = 0
	BEGIN
		IF @COD_DIVIDA IS NULL OR @COD_CLIENTE IS NULL OR @COD_FUNCIONARIO IS NULL OR @COD_CATEGORIA IS NULL OR
		   @DATA_DIVIDA IS NULL OR  @VALOR IS NULL
			BEGIN
				INSERT INTO STG.VIO_DIVIDA VALUES(@DATA_CARGA, @COD_DIVIDA, @COD_CLIENTE, @COD_FUNCIONARIO, @COD_CATEGORIA, 
													 @DATA_DIVIDA, @VALOR, GETDATE(), 'CAMPOS SEM PREENCHER')
			END
		ELSE
			BEGIN
				SET @ID_CLIENTE = (SELECT ID_CLIENTE FROM DW.DIM_CLIENTE WHERE COD_CLIENTE = @COD_CLIENTE)
				SET @ID_FUNCIONARIO = (SELECT ID_FUNCIONARIO FROM DW.DIM_FUNCIONARIO 
									   WHERE COD_FUNCIONARIO = @COD_FUNCIONARIO AND FLAG_CORRENTE = 'SIM')
				SET @ID_CATEGORIA = (SELECT ID_CATEGORIA FROM DW.DIM_CATEGORIA WHERE COD_CATEGORIA = @COD_CATEGORIA)
				SET @ID_DATA_DIVIDA = (SELECT ID_TEMPO FROM DW.DIM_TEMPO WHERE DATA = @DATA_DIVIDA)
				SET @ID_DATA_POSSIVEL_PAGAMENTO = (SELECT ID_TEMPO FROM DW.DIM_TEMPO WHERE DATA = DATEADD (MM, 1, @DATA_DIVIDA))
						
				INSERT INTO DW.FATO_DIVIDA VALUES (@ID_CLIENTE, @ID_FUNCIONARIO, @ID_CATEGORIA, @ID_DATA_DIVIDA, 
					@ID_DATA_POSSIVEL_PAGAMENTO, @VALOR, 1)
				IF @@ERROR = 0 AND (EXISTS(SELECT COD_DIVIDA FROM STG.VIO_DIVIDA WHERE COD_DIVIDA = @COD_DIVIDA))
					DELETE FROM STG.VIO_DIVIDA WHERE COD_DIVIDA = @COD_DIVIDA
				ELSE
					INSERT INTO STG.VIO_DIVIDA VALUES(@DATA_CARGA, @COD_DIVIDA, @COD_CLIENTE, @COD_FUNCIONARIO, @COD_CATEGORIA, 
													 @DATA_DIVIDA, @VALOR, GETDATE(), 'DADOS INVALIDOS')
			END
		FETCH C_CURSOR INTO @DATA, @COD_DIVIDA, @COD_CLIENTE, @COD_FUNCIONARIO, @COD_CATEGORIA, @DATA_DIVIDA, @VALOR
	END
CLOSE C_CURSOR
DEALLOCATE C_CURSOR

--------------------------								--------------------------
--------------------------			PAGAMENTO			--------------------------
--------------------------								--------------------------

ALTER PROCEDURE SP_PAGAMENTO_STG_DW @DATA_CARGA DATETIME AS
DECLARE @DATA DATETIME, @COD_PAGAMENTO INT, @COD_CLIENTE INT, @COD_FUNCIONARIO INT, @DATA_PAGAMENTO VARCHAR(50), 
@VALOR NUMERIC(10,2), @ID_CLIENTE INT, @ID_FUNCIONARIO INT, @ID_DATA_PAGAMENTO DATETIME
DECLARE C_CURSOR CURSOR FOR SELECT DATA_CARGA, COD_PAGAMENTO, COD_CLIENTE, COD_FUNCIONARIO, DATA, VALOR FROM STG.AUX_PAGAMENTO
OPEN C_CURSOR
FETCH C_CURSOR INTO @DATA, @COD_PAGAMENTO, @COD_CLIENTE, @COD_FUNCIONARIO, @DATA_PAGAMENTO, @VALOR
WHILE @@FETCH_STATUS = 0
	BEGIN
		IF @COD_PAGAMENTO IS NULL OR @COD_CLIENTE IS NULL OR @COD_FUNCIONARIO IS NULL OR
		   @DATA_PAGAMENTO IS NULL OR  @VALOR IS NULL
			BEGIN
				INSERT INTO STG.VIO_PAGAMENTO VALUES(@DATA_CARGA, @COD_PAGAMENTO, @COD_CLIENTE, @COD_FUNCIONARIO,
													 @DATA_PAGAMENTO, @VALOR, GETDATE(), 'CAMPOS SEM PREENCHER')
			END
		ELSE
			BEGIN
				SET @ID_CLIENTE = (SELECT ID_CLIENTE FROM DW.DIM_CLIENTE WHERE COD_CLIENTE = @COD_CLIENTE)
				SET @ID_FUNCIONARIO = (SELECT ID_FUNCIONARIO FROM DW.DIM_FUNCIONARIO 
								WHERE COD_FUNCIONARIO = @COD_FUNCIONARIO AND FLAG_CORRENTE = 'SIM')
				SET @ID_DATA_PAGAMENTO = (SELECT ID_TEMPO FROM DW.DIM_TEMPO WHERE DATA = @DATA_PAGAMENTO)
				
						
				INSERT INTO DW.FATO_PAGAMENTO VALUES (@ID_CLIENTE, @ID_FUNCIONARIO, @ID_DATA_PAGAMENTO, @VALOR, 1)
				IF @@ERROR = 0 AND (EXISTS(SELECT COD_PAGAMENTO FROM STG.VIO_PAGAMENTO WHERE COD_PAGAMENTO = @COD_PAGAMENTO))
					DELETE FROM STG.VIO_PAGAMENTO WHERE COD_PAGAMENTO = @COD_PAGAMENTO
				ELSE
					INSERT INTO STG.VIO_PAGAMENTO VALUES(@DATA_CARGA, @COD_PAGAMENTO, @COD_CLIENTE, @COD_FUNCIONARIO,
													 @DATA_PAGAMENTO, @VALOR, GETDATE(), 'DADOS INVALIDOS')
			END
		FETCH C_CURSOR INTO @DATA, @COD_PAGAMENTO, @COD_CLIENTE, @COD_FUNCIONARIO, @DATA_PAGAMENTO, @VALOR
	END
CLOSE C_CURSOR
DEALLOCATE C_CURSOR

--------------------------								--------------------------
--------------------------		CARGA  STGING DW		--------------------------
--------------------------								--------------------------

CREATE PROCEDURE SP_CARGA_STG_DW @DATA_CARGA DATETIME AS
EXEC SP_CLIENTE_STG_DW @DATA_CARGA
EXEC SP_FUNCIONARIO_STG_DW @DATA_CARGA
EXEC SP_CATEGORIA_STG_DW @DATA_CARGA
EXEC SP_DIVIDA_STG_DW @DATA_CARGA
EXEC SP_PAGAMENTO_STG_DW @DATA_CARGA
